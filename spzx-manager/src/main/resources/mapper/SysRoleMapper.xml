<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.spzx.manager.mapper.SysRoleMapper">

    <resultMap id="BaseResultMap" type="com.atguigu.spzx.model.entity.system.SysRole">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="roleCode" column="role_code" jdbcType="VARCHAR"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="isDeleted" column="is_deleted" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="BaseColumns">
        id,role_name,role_code,
        description,create_time,update_time,
        is_deleted
    </sql>
    <insert id="insertSysRole">
        insert into sys_role (role_name, role_code, description)
        values (#{roleName}, #{roleCode}, #{description})
    </insert>
    <insert id="assignRole">
        insert into sys_user_role (role_id, user_id)
        values
        <foreach collection="roleIds" separator="," item="roleId">
            (#{roleId},#{userId})
        </foreach>
    </insert>
    <update id="updateSysRole">
        update sys_role
        <set>
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName},
            </if>
            <if test="roleCode != null and roleCode != ''">
                role_code = #{roleCode},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            id = #{id}
        </set>
        where id = #{id}
    </update>
    <update id="deleteById">
        update sys_role
        set is_deleted = 1
        where id = #{id}
    </update>
    <delete id="deleteAssignedRole">
        delete
        from sys_user_role
        where user_id = #{userId}
    </delete>
    <select id="selectRolePage" resultMap="BaseResultMap">
        select
        <include refid="BaseColumns"/>
        from sys_role
        <where>
            <if test="roleName != null and roleName != '' ">
                role_name like concat('%',#{roleName},'%')
            </if>
            and is_deleted = 0
        </where>
        order by create_time desc
    </select>
    <select id="selectById" resultMap="BaseResultMap">
        select
        <include refid="BaseColumns"/>
        from sys_role where id = #{id} and is_deleted = 0
    </select>
    <select id="getAssignedRoleIds" resultType="long">
        select role_id
        from sys_user_role
        where user_id = #{userId}
          and is_deleted = 0
    </select>
    <select id="getAllRoles" resultMap="BaseResultMap">
        select
        <include refid="BaseColumns"/>
        from sys_role
        where is_deleted = 0
    </select>
</mapper>
